{"version":3,"file":"static/js/221.a56beed1.chunk.js","mappings":"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","sources":["pages/Article/index.js","store/loginStore.js","store/userStore.js","store/channelStore.js","store/index.js","utils/token.js","utils/http.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { history } from \"@/utils/history\";\nimport {\n  Table,\n  Card,\n  Breadcrumb,\n  Form,\n  Button,\n  Radio,\n  DatePicker,\n  Select,\n  Tag,\n  Space,\n} from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport \"moment/locale/zh-cn\";\nimport locale from \"antd/es/date-picker/locale/zh_CN\";\nimport \"./index.scss\";\nimport img404 from \"@/assets/error.png\";\n\nimport { useStore } from \"@/store\";\n\nimport { http } from \"@/utils\";\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst Article = () => {\n  // 获取频道列表\n  const { channelStore } = useStore();\n\n  // 文章列表管理 统一管理数据 将来修改给setArticleData传对象\n  const [articleData, setArticleData] = useState({\n    list: [], // 文章列表\n    count: 0, // 文章数量\n  });\n  // 参数管理\n  const [params, setParams] = useState({\n    page: 1,\n    per_page: 5,\n  });\n\n  /* 表单筛选功能实现 */\n  const onFinish = (values) => {\n    const { channel_id, date, status } = values;\n    // 数据处理\n    const _params = {};\n    // 格式化status\n    _params.status = status;\n\n    // 初始化频道\n    if (channel_id) {\n      _params.channel_id = channel_id;\n    }\n    // 初始化时间\n    if (date) {\n      _params.begin_pubdate = date[0].format(\"YYYY-MM-DD\");\n      _params.end_pubdate = date[1].format(\"YYYY-MM-DD\");\n    }\n    // 修改params数据 引起接口的重新发送 对象的合并是一个整体覆盖 改了对象的整体引用\n    setParams({\n      ...params,\n      ..._params,\n    });\n  };\n\n  const pageChange = (page) => {\n    // 拿到当前页参数 修改params 引起接口更新\n    setParams({\n      ...params,\n      page,\n    });\n  };\n\n  //del\n  const delArticle = async (data) => {\n    console.log(data);\n    await http.delete(`/mp/articles/${data.id}`);\n    // 刷新一下列表\n    setParams({\n      ...params,\n      page: 1,\n    });\n  };\n\n  // 编辑文章\n  //const navigate = useNavigate();\n  // const goPublish = (data) => {\n  //   navigate(`/publish?id=${data.id}`);\n  // };\n\n  // 发送接口请求\n  useEffect(() => {\n    async function fetchArticleList() {\n      const res = await http.get(\"/mp/articles\", { params });\n      const { results, total_count } = res.data;\n      setArticleData({\n        list: results,\n        count: total_count,\n      });\n      channelStore.loadChannelList();\n    }\n    fetchArticleList();\n  }, [params, channelStore]);\n  const columns = [\n    {\n      title: \"封面\",\n      dataIndex: \"cover\",\n      width: 120,\n      render: (cover) => {\n        return (\n          <img src={cover.images[0] || img404} width={80} height={60} alt=\"\" />\n        );\n      },\n    },\n    {\n      title: \"标题\",\n      dataIndex: \"title\",\n      width: 220,\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (data) => (\n        <Tag color={data === 3 ? \"green\" : \"red\"}>审核通过{}</Tag>\n      ),\n    },\n    {\n      title: \"发布时间\",\n      dataIndex: \"pubdate\",\n    },\n    {\n      title: \"阅读数\",\n      dataIndex: \"read_count\",\n    },\n    {\n      title: \"评论数\",\n      dataIndex: \"comment_count\",\n    },\n    {\n      title: \"点赞数\",\n      dataIndex: \"like_count\",\n    },\n    {\n      title: \"操作\",\n      render: (data) => {\n        return (\n          <Space size=\"middle\">\n            <Button\n              // onClick={() => goPublish(data)}\n              onClick={() => history.push(`/publish?id=${data.id}`)}\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<EditOutlined />}\n            />\n            <Button\n              type=\"primary\"\n              danger\n              shape=\"circle\"\n              onClick={() => delArticle(data)}\n              icon={<DeleteOutlined />}\n            />\n          </Space>\n        );\n      },\n    },\n  ];\n  return (\n    <div>\n      <Card\n        title={\n          <Breadcrumb separator=\">\">\n            <Breadcrumb.Item>\n              <Link to=\"/home\">首页</Link>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>内容管理</Breadcrumb.Item>\n          </Breadcrumb>\n        }\n        style={{ marginBottom: 20 }}\n      >\n        <Form onFinish={onFinish} initialValues={{ status: null }}>\n          <Form.Item label=\"状态\" name=\"status\">\n            <Radio.Group>\n              <Radio value={null}>全部</Radio>\n              <Radio value={0}>草稿</Radio>\n              <Radio value={1}>待审核</Radio>\n              <Radio value={2}>审核通过</Radio>\n              <Radio value={3}>审核失败</Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item label=\"频道\" name=\"channel_id\">\n            <Select placeholder=\"请选择文章频道\" style={{ width: 120 }}>\n              {channelStore.channelList.map((item) => (\n                <Option key={item.id} value={item.id}>\n                  {item.name}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"日期\" name=\"date\">\n            {/* 传入locale属性 控制中文显示*/}\n            <RangePicker locale={locale}></RangePicker>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: 80 }}>\n              筛选\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n      <div>\n        <Card title={`根据筛选条件共查询到 ${articleData.count} 条结果：`}>\n          <Table\n            rowKey=\"id\"\n            pagination={{\n              position: [\"bottomCenter\"],\n              current: params.page,\n              pageSize: params.per_page,\n              total: articleData.count,\n              onChange: pageChange,\n            }}\n            columns={columns}\n            dataSource={articleData.list}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Article;\n","// login module\nimport { makeAutoObservable } from \"mobx\";\nimport { http, setToken, getToken, clearToken } from \"@/utils\";\nclass LoginStore {\n  token = getToken() || \"\";\n  constructor() {\n    // 响应式\n    makeAutoObservable(this);\n  }\n  getToken = async ({ mobile, code }) => {\n    // 调用登录接口\n    const res = await http.post(\"http://geek.itheima.net/v1_0/authorizations\", {\n      mobile,\n      code,\n    });\n    // 存入token\n    this.token = res.data.token;\n    // 存入ls\n    setToken(this.token);\n  };\n  // 退出登录\n  loginOut = () => {\n    this.token = \"\";\n    clearToken();\n  };\n}\n\nexport default LoginStore;\n","// 用户模块\nimport { makeAutoObservable } from \"mobx\";\nimport { http } from \"@/utils\";\n\nclass UserStore {\n  userInfo = {};\n  constructor() {\n    makeAutoObservable(this);\n  }\n  getUserInfo = async () => {\n    const res = await http.get(\"/user/profile\");\n    this.userInfo = res.data;\n  };\n}\n\nexport default UserStore;\n","import { makeAutoObservable } from \"mobx\";\nimport { http } from \"@/utils\";\nclass ChannelStore {\n  channelList = [];\n  constructor() {\n    makeAutoObservable(this);\n  }\n  // article publish 哪里调用这个函数呢？\n  loadChannelList = async () => {\n    const res = await http.get(\"/channels\");\n    this.channelList = res.data.channels;\n  };\n}\n\nexport default ChannelStore;\n","import React from \"react\";\nimport LoginStore from \"./loginStore\";\nimport UserStore from \"./userStore\";\nimport ChannelStore from \"./channelStore\";\n\nclass RootStore {\n  // 组合模块\n  constructor() {\n    this.loginStore = new LoginStore();\n    this.userStore = new UserStore();\n    this.channelStore = new ChannelStore();\n  }\n}\n// 导入useStore方法供组件使用数据\nconst StoresContext = React.createContext(new RootStore());\nexport const useStore = () => React.useContext(StoresContext);\n","const TOKEN_KEY = \"geek_pc\";\n\nconst getToken = () => localStorage.getItem(TOKEN_KEY);\nconst setToken = (token) => localStorage.setItem(TOKEN_KEY, token);\nconst clearToken = () => localStorage.removeItem(TOKEN_KEY);\n\nexport { getToken, setToken, clearToken };\n","import axios from \"axios\";\nimport { getToken } from \"./token\";\nimport { history } from \"./history\";\n\nconst http = axios.create({\n  baseURL: \"http://geek.itheima.net/v1_0\",\n  timeout: 5000,\n});\n// 添加请求拦截器\nhttp.interceptors.request.use(\n  (config) => {\n    // if not login add token\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 添加响应拦截器\nhttp.interceptors.response.use(\n  (response) => {\n    // 2xx 范围内的状态码都会触发该函数。\n    // 对响应数据做点什么\n    return response.data;\n  },\n  (error) => {\n    // 超出 2xx 范围的状态码都会触发该函数。\n    // 对响应错误做点什么\n    if (error.response.status === 401) {\n      // 删除token\n      //clearToken();\n      // 跳转到登录页\n      history.push(\"/login\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport { http };\n"],"names":["Option","Select","RangePicker","DatePicker","channelStore","useStore","_useState","useState","list","count","_useState2","_slicedToArray","articleData","setArticleData","_useState3","page","per_page","_useState4","params","setParams","delArticle","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","console","log","http","concat","id","_objectSpread","stop","_x","apply","arguments","useEffect","_fetchArticleList","_callee2","res","_res$data","results","total_count","_context2","sent","loadChannelList","fetchArticleList","columns","title","dataIndex","width","render","cover","_jsx","src","images","height","alt","Tag","color","children","_jsxs","Space","size","Button","onClick","history","type","shape","icon","EditOutlined","danger","DeleteOutlined","Card","Breadcrumb","separator","Link","to","style","marginBottom","Form","onFinish","values","channel_id","date","status","_params","begin_pubdate","format","end_pubdate","initialValues","label","name","Radio","value","placeholder","channelList","map","item","locale","htmlType","marginLeft","Table","rowKey","pagination","position","current","pageSize","total","onChange","dataSource","LoginStore","_createClass","_this","_classCallCheck","token","getToken","_ref2","mobile","code","setToken","loginOut","clearToken","makeAutoObservable","this","UserStore","userInfo","getUserInfo","ChannelStore","channels","RootStore","loginStore","userStore","StoresContext","React","TOKEN_KEY","localStorage","getItem","setItem","removeItem","axios","baseURL","timeout","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response"],"sourceRoot":""}